/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import BusinessLogic.*;
import static UI.Login.EName;
import static UI.Login.UName;
import java.awt.Dimension;
import java.util.List;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.NumberFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author tavon
 */
public class EmployeePanel extends javax.swing.JFrame {
    DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");  
    LocalDateTime now = LocalDateTime.now();
    String dt;
    Facade facade = new Facade();
    /**
     * Creates new form EmployeePanel
     */
    public EmployeePanel() {
        initComponents();
        setSize(1180,550);
        setLocation(100,150);
        dt = dtf.format(now);
        generateEmployeePanel();
        txtbill.setPreferredSize(new Dimension(350, 350));
        txtbill.setText("========================================================="+"\n"
        +"\t"+"                          "+"KFC Online"+"\n"
        +"\t"+"                "+"Contact No-xxxxxxxxxx"+"\n"
        +"\t"+"                 "+"Adres- Enter Address"+"\n"
        +"\t"+"                  "+dt+"\n"
        +"========================================================="+"\n"
        +"\t\t"+"Receipt"+"\n"
        +"=========================================================");
    }
    
    private class Choice extends JComboBox{
        Choice(){
            addItem("Confirmed");
            addItem("Finished");
        
        }
        
    }
    
    
    
    public static String rightPadding(String inputString, int num) {
        StringBuilder sb = new StringBuilder();
        if (inputString.length()==(num-1)){
            return inputString;
        }else{
        for (int i = 0; i < num; i++) {
            sb.append(' ');
        }
        return sb.substring(inputString.length()) + inputString;
    }
    }
    
    
    public void generateEmployeePanel(){
        
        
        ArrayList<Order> list = facade.receiveOrder();
        String[] columnName = {"OrderID","Customer Name","Customer ID","Order","Quantity",null,"Total","Status"};
        Object[][] rows = new Object[list.size()][8];
        NumberFormat myformat = NumberFormat.getInstance();
        myformat.setGroupingUsed(true);
        for(int i = 0; i < list.size(); i++){
            rows[i][0] = list.get(i).getId();
            rows[i][1] = list.get(i).getName();
            rows[i][2] = list.get(i).getCID();
            rows[i][3] = list.get(i).getOrders();
            rows[i][4] = list.get(i).getQty();
            rows[i][6] = "$"+ String.valueOf(myformat.format(list.get(i).getTotalCost()));
            rows[i][7] = list.get(i).getStatus();
        }
        
        TheModel model = new TheModel(rows, columnName);
        emptable.setModel(model);
        emptable.setRowHeight(120);
        emptable.removeColumn(emptable.getColumnModel().getColumn(5));
        emptable.getColumnModel().getColumn(1).setPreferredWidth(125);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        emptable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtbill = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtbill2 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        orderfield = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        emptable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        emptable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emptableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(emptable);

        jButton1.setText("Email Receipt");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(32, 32, 32))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        txtbill.setColumns(20);
        txtbill.setRows(5);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtbill, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtbill, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jLayeredPane1.add(jPanel4, "card2");

        txtbill2.setColumns(20);
        txtbill2.setRows(5);
        jScrollPane3.setViewportView(txtbill2);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
        );

        jLayeredPane1.add(jPanel5, "card3");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLayeredPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel1.setText("Order ID: ");

        orderfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderfieldActionPerformed(evt);
            }
        });

        jLabel2.setText("Status: ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Order Received", "Ongoing", "Complete", "Cancelled" }));

        jButton2.setText("Update Status");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Delete Order");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Clear");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Refresh");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(orderfield, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(26, 26, 26)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jButton4)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(orderfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emptableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emptableMouseClicked
        // TODO add your handling code here:
        
        try{
            int row = emptable.getSelectedRow();
            String click = (emptable.getModel().getValueAt(row,0).toString());
            String query ="SELECT * FROM orders where orderid='"+click+"'";
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
            PreparedStatement prep = conn.prepareStatement(query);
            ResultSet rs = prep.executeQuery();
            if(rs.next()){
                int insertid = rs.getInt("orderid");
                orderfield.setText(String.valueOf(insertid));
            }
        }catch(SQLException ex){
           JOptionPane.showMessageDialog(null,ex); 
        }
        
        txtbill.setText("========================================================="+"\n"
        +"\t"+"                          "+"KFC Online"+"\n"
        +"\t"+"                "+"Contact No-xxxxxxxxxx"+"\n"
        +"\t"+"                 "+"Adres- Enter Address"+"\n"
        +"\t"+"                  "+dt+"\n"
        +"========================================================="+"\n"
        +"\t\t"+"Receipt"+"\n"
        +"=========================================================");
        try{
            int row = emptable.getSelectedRow();
            String click = (emptable.getModel().getValueAt(row,0).toString());
            String query ="SELECT * FROM orders where orderid='"+click+"'";
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
            PreparedStatement prep = conn.prepareStatement(query);
            ResultSet rs = prep.executeQuery();
            if(rs.next()){
                String myString = rs.getString("ords");
                String[] myArray = myString.split(",");
                List <String> myList = Arrays.asList(myArray);
                String myString1 = rs.getString("quantity");
                String[] myArray1 = myString1.split(",");
                List <String> myList1 = Arrays.asList(myArray1);
                txtbill.setText(
                txtbill.getText()+"\n"+"OrderID: "+rs.getInt("orderid")+"\t\t"+"Cashier: "+EName+"\n"
                    +"========================================================="
                    +"\n"+"|"+"Item"+"|--------------------------------|"+"Quantity"
                    +"|---------------------------|"+"Price Per Unit"+"|"+"\n"
                    +"========================================================="
                );
                for(int i = 0; i<myList.size(); i++){
                    String queryprice ="SELECT * FROM products where prodname='"+myList.get(i)+"'";
                    Connection conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
                    PreparedStatement prep1 = conn1.prepareStatement(queryprice);
                    ResultSet rs1 = prep1.executeQuery();
                    String printprice = "";
                    int intprice=0;
                    while(rs1.next()){
                        intprice =rs1.getInt("price");
                        printprice = Integer.toString(intprice);
                    }
                    if(myList.get(i).length()< 10){
                    txtbill.setText(
                    txtbill.getText()+"\n"+rightPadding(myList.get(i),15)
                    +"\t\t"+myList1.get(i)+"\t\t"
                    +printprice+"\n"
                    );
                    }else if(myList.get(i).length()> 11 && myList.get(i).length()<15){
                    txtbill.setText(
                    txtbill.getText()+"\n"+rightPadding(myList.get(i),15)
                    +"\t"+myList1.get(i)+"\t\t"
                    +printprice+"\n"
                    );  
                    
                    }else{
                    txtbill.setText(
                    txtbill.getText()+"\n"+rightPadding(myList.get(i),15)
                    +"\t"+myList1.get(i)+"\t\t"
                    +printprice+"\n"
                    
                    );
                    }
                    
                }
                
            }
            txtbill.setText(
                txtbill.getText()+"========================================================="+"\n"
                +"Total:"+"\t\t\t"+"                         "+"$"+rs.getInt("totalcost")
                +"\n"+"========================================================="
                +"\n"+"\t"+"             "+"Thank You For Ordering KFC!"
                +"\n"+"========================================================="
                );
        }catch(SQLException ex){
           JOptionPane.showMessageDialog(null,ex); 
        }
        
        txtbill2.setText("================================"+"\n"
        +"\t"+"                "+"KFC Online"+"\n"
        +"\t"+"      "+"Contact No-xxxxxxxxxx"+"\n"
        +"\t"+"       "+"Adres- Enter Address"+"\n"
        +"\t"+"        "+dt+"\n"
        +"================================"+"\n"
        +"\t\t"+"          "+"Receipt"+"\n"
        +"================================");
        try{
            int row = emptable.getSelectedRow();
            String click = (emptable.getModel().getValueAt(row,0).toString());
            String query ="SELECT * FROM orders where orderid='"+click+"'";
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
            PreparedStatement prep = conn.prepareStatement(query);
            ResultSet rs = prep.executeQuery();
            if(rs.next()){
                String myString = rs.getString("ords");
                String[] myArray = myString.split(",");
                List <String> myList = Arrays.asList(myArray);
                String myString1 = rs.getString("quantity");
                String[] myArray1 = myString1.split(",");
                List <String> myList1 = Arrays.asList(myArray1);
                txtbill2.setText(
                txtbill2.getText()+"\n"+"OrderID: "+rs.getInt("orderid")+"\t\t"+"Cashier: "+EName+"\n"
                    +"================================"
                    +"\n"+"|"+"Item"+"|--------------|"+"Quantity"
                    +"|----|"+"Price Per Unit"+"|"+"\n"
                    +"================================"
                );
                for(int i = 0; i<myList.size(); i++){
                    String queryprice ="SELECT * FROM products where prodname='"+myList.get(i)+"'";
                    Connection conn1 = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
                    PreparedStatement prep1 = conn1.prepareStatement(queryprice);
                    ResultSet rs1 = prep1.executeQuery();
                    String printprice = "";
                    int intprice=0;
                    while(rs1.next()){
                        intprice =rs1.getInt("price");
                        printprice = Integer.toString(intprice);
                    }
                    if(myList.get(i).length()< 15){
                    txtbill2.setText(
                    txtbill2.getText()+"\n"+rightPadding(myList.get(i),15)
                    +"\t\t"+myList1.get(i)+"\t\t"
                    +printprice+"\n"
                    );  
                    }else{
                    txtbill2.setText(
                    txtbill2.getText()+"\n"+rightPadding(myList.get(i),15)
                    +"\t"+myList1.get(i)+"\t\t"
                    +printprice+"\n"
                    
                    );
                    }
                    
                }
                
            }
            txtbill2.setText(
                txtbill2.getText()+"================================"+"\n"
                +"Total:"+"\t\t\t"+"                         "+"$"+rs.getInt("totalcost")
                +"\n"+"================================"
                +"\n"+"\t"+"   "+"Thank You For Ordering KFC!"
                +"\n"+"================================"
                );
        }catch(SQLException ex){
           JOptionPane.showMessageDialog(null,ex); 
        }     
        
        
    }//GEN-LAST:event_emptableMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:\
        String g = orderfield.getText();
        String upstat = "Order Received";
        int orderid = Integer.parseInt(g);
        String mail="";
        try{
           Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
           PreparedStatement prep = conn.prepareStatement("UPDATE orders SET status= ? WHERE orderid=?");
           prep.setString(1, upstat);
           prep.setInt(2, orderid);
           prep.executeUpdate();
           Statement ste = conn.createStatement();
           ResultSet rs = ste.executeQuery("SELECT * FROM orders WHERE orderid ='"+orderid+"'");
           if(rs.next()){
               mail = rs.getString("email");
           }
        }catch(SQLException ex){
        }
        String Msg = txtbill2.getText();
        try {
            facade.notifyCustomer(mail, Msg);
            generateEmployeePanel();
        } catch (Exception ex) {
            Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void orderfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orderfieldActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        String o = orderfield.getText();
        String upstat = String.valueOf(jComboBox1.getSelectedItem());;
        int orderid = Integer.parseInt(o);
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
            PreparedStatement prep = conn.prepareStatement("UPDATE orders SET status= ? WHERE orderid=?");
            
            prep.setString(1,upstat);
            prep.setInt(2, orderid);
            if(prep.executeUpdate()==1){
                JOptionPane.showMessageDialog(null, "Status Updated!");
                generateEmployeePanel();
            }else if(prep.executeUpdate()==0){
                JOptionPane.showMessageDialog(null, "Entry does not exist!");
            }
        }catch(SQLException ex){
            
        }
        if(upstat.equals("Complete")){
        try{
            String messg = "Your Order Is Complete and Ready For Pickup!"+"\n"
                    +"~~~~~~~KFC UWI~~~~~~~Finger Lickin Good!";
            String mail="";
            try{
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
                Statement ste = conn.createStatement();
                ResultSet rs = ste.executeQuery("SELECT * FROM orders WHERE orderid ='"+orderid+"'");
                if(rs.next()){
                    mail = rs.getString("email");
                }
            }catch(SQLException ex){
            }
            facade.notifyCustomer(mail, messg);
        }catch(Exception ex){
                Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else if(upstat.equals("Ongoing")){
            try{
            String messg = "Your Order Is Being Prepared!"+"\n"
                    +"~~~~~~~KFC UWI~~~~~~~Finger Lickin Good!";
            String mail="";
            try{
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
                Statement ste = conn.createStatement();
                ResultSet rs = ste.executeQuery("SELECT * FROM orders WHERE orderid ='"+orderid+"'");
                if(rs.next()){
                    mail = rs.getString("email");
                }
            }catch(SQLException ex){
            }
            facade.notifyCustomer(mail, messg);
        }catch(Exception ex){
                Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else if(upstat.equals("Cancelled")){
            try{
            String messg = "Your Order Has Been Cancelled!"+"\n"
                    +"~~~~~~~KFC UWI~~~~~~~Finger Lickin Good!";
            String mail="";
            try{
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
                Statement ste = conn.createStatement();
                ResultSet rs = ste.executeQuery("SELECT * FROM orders WHERE orderid ='"+orderid+"'");
                if(rs.next()){
                    mail = rs.getString("email");
                }
            }catch(SQLException ex){
            }
            facade.notifyCustomer(mail, messg);
        }catch(Exception ex){
                Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        String l = orderfield.getText();
        int orderid = Integer.parseInt(l);
        int response = JOptionPane.showConfirmDialog(null,"Delete Order?","Confirm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(response==JOptionPane.YES_OPTION){
            try{
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
                PreparedStatement prep = conn.prepareStatement("DELETE FROM orders WHERE orderid=?");

                prep.setInt(1, orderid);
                if(prep.executeUpdate()==1){
                    JOptionPane.showMessageDialog(null, "Item Deleted!");
                    generateEmployeePanel();
                }else if(prep.executeUpdate()==0){
                    JOptionPane.showMessageDialog(null, "Entry does not exist!");
                }
            }catch(SQLException ex){

            }
        }else{
            
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        String C = "Complete";
        String Can = "Cancelled";
        try{
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/restaurantdatabase","root","");
            PreparedStatement prep = conn.prepareStatement("DELETE FROM orders WHERE status=? or status=?");

            prep.setString(1, C);
            prep.setString(2, Can);
            if(prep.executeUpdate()==1){
                JOptionPane.showMessageDialog(null, "Cleared!");
                generateEmployeePanel();
            }else if(prep.executeUpdate()==0){
                JOptionPane.showMessageDialog(null, "Complete or Cancelled Orders already cleared!");
            }
        }catch(SQLException ex){

        }
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        generateEmployeePanel();
    }//GEN-LAST:event_jButton5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeePanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable emptable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField orderfield;
    private javax.swing.JTextArea txtbill;
    private javax.swing.JTextArea txtbill2;
    // End of variables declaration//GEN-END:variables
}
